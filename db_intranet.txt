CREATE TABLE user (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(100) NOT NULL,
    prenom VARCHAR(100) NOT NULL,
    email VARCHAR(200) UNIQUE NOT NULL,
    password VARCHAR(200) NOT NULL,
    role ENUM('eleve', 'enseignant') NOT NULL, -- Spécifie le rôle de l'utilisateur
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE eleve (
    id INT PRIMARY KEY, -- Correspond à l'ID de la table user
    FOREIGN KEY (id) REFERENCES user(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE enseignant (
    id INT PRIMARY KEY, -- Correspond à l'ID de la table user
    FOREIGN KEY (id) REFERENCES user(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE matiere (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nom VARCHAR(100) UNIQUE NOT NULL,
    description TEXT,
    heures_total INT NOT NULL
);


CREATE TABLE enseignant_matiere (
    enseignant_id INT NOT NULL,
    matiere_id INT NOT NULL,
    PRIMARY KEY (enseignant_id, matiere_id),
    FOREIGN KEY (enseignant_id) REFERENCES enseignant(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (matiere_id) REFERENCES matiere(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE inscription (
    id INT AUTO_INCREMENT PRIMARY KEY,
    eleve_id INT NOT NULL,
    matiere_id INT NOT NULL,
    date_inscription DATE NOT NULL DEFAULT CURRENT_DATE,
    FOREIGN KEY (eleve_id) REFERENCES eleve(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (matiere_id) REFERENCES matiere(id) ON DELETE CASCADE ON UPDATE CASCADE,
    UNIQUE (eleve_id, matiere_id)
);

CREATE TABLE note (
    id INT AUTO_INCREMENT PRIMARY KEY,
    eleve_id INT NOT NULL,
    matiere_id INT NOT NULL,
    valeur DECIMAL(5,2) NOT NULL, 
    commentaire TEXT, 
    date_attribution DATE NOT NULL DEFAULT CURRENT_DATE,
    FOREIGN KEY (eleve_id) REFERENCES eleve(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (matiere_id) REFERENCES matiere(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE messagerie (
    id INT AUTO_INCREMENT PRIMARY KEY,
    sender_id INT NOT NULL, 
    receiver_id INT NOT NULL,
    message TEXT NOT NULL, 
    sender_role ENUM('eleve', 'enseignant') NOT NULL,
    receiver_role ENUM('eleve', 'enseignant') NOT NULL,
    date_envoi DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (sender_id) REFERENCES user(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (receiver_id) REFERENCES user(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE cours (
    id INT AUTO_INCREMENT PRIMARY KEY,
    matiere_id INT NOT NULL,
    FOREIGN KEY (matiere_id) REFERENCES matiere(id) ON DELETE CASCADE ON UPDATE CASCADE
);
